name: Build Code, Run unit test, Run SAST, SCA , DAST Security scans
on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

run-name: "Java-Project, ${{ github.actor }}, Event: ${{ github.event_name }}"

defaults:
  run:
    shell: bash

jobs:
  trivy_file_scan:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: write              # This is required for actions/checkout@v1
      security-events: write   # To upload sarif files
    steps:
      - uses: actions/checkout@v4
      - name: Run trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-ref: '.'
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          token: ${{ secrets.GITHUB_TOKEN }}
  SAST_job_sonar:
    runs-on: ubuntu-22.04
    needs: trivy_file_scan
    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Build with mvn for SAST "Static Application Security Testing"
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=sidhugithubaction_java-project -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=$SONAR_TOKEN -Dsonar.organization=sidhugithubaction
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SCA_job_security:
    runs-on: ubuntu-22.04
    needs: SAST_job_sonar
    name: Run the SCA Scan using SNYK
    steps:
      - uses: actions/checkout@v4
      - name: Run SYNK to check for Vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  release-job:
    needs: SCA_job_security
    permissions: 
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
      - run: |
          npm ci
          npm test
      - name: Release it
        run: |
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  ghcr-push-job:
    runs-on: ubuntu-22.04
    needs: release-job
    steps:
      - uses: actions/checkout@v4
      - run: |
          git pull origin main
      - run: |
          echo "IMG_VERSION=$(cat package.json | grep version | tr -d ' ' | cut -d ':' -f 2 | tr -d '"' | tr -d ',')" >> "$GITHUB_ENV"      
      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        env:
          IMG_VERSION: ${{ env.IMG_VERSION }}
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=v${{ env.IMG_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ env.IMG_VERSION }}
      - name: Build and publish
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  docker-push-job:
    runs-on: ubuntu-22.04
    needs: release-job
    steps:
      - uses: actions/checkout@v4
      - run: |
          git pull origin main
      - run: |
          echo "IMG_VERSION=$(cat package.json | grep version | tr -d ' ' | cut -d ':' -f 2 | tr -d '"' | tr -d ',')" >> "$GITHUB_ENV"      
      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        env:
          IMG_VERSION: ${{ env.IMG_VERSION }}
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/ghactionspractice
          tags: |
            type=semver,pattern={{version}},value=${{ env.IMG_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.IMG_VERSION }}
      - name: Build and publish
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

